# ----------------------------------------------------------------------------
#
# Copyright (c) 2018, WSO2 Inc. (http://wso2.org) All Rights Reserved.
#
# WSO2 Inc. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# ----------------------------------------------------------------------------
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Template to run Ballerina Performance Tests. This template
  creates Amazon EC2 instance in a VPC. The JMeter Client EC2 instance will have
  an an Elastic IP address.
  **WARNING** This template creates multipe Amazon AWS resources. You will be
  billed for the AWS resources used if you create a stack from this template.
##############################################################################################
# Mappings for Ubuntu AMIs of Instance Type: hvm:ebs-ssd
# Refer https://cloud-images.ubuntu.com/locator/ec2/ for ubuntu AMI-ID's for the LTS version
##############################################################################################
Mappings:
  AWSRegion2AMI:
    us-east-1:
      AMI: ami-759bc50a
    us-east-2:
      AMI: ami-5e8bb23b
    us-west-1:
      AMI: ami-4aa04129
    us-west-2:
      AMI: ami-ba602bc2
#############################
# User inputs
#############################
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  TestName:
    Description: Name of the tests
    Type: String
    Default: Ballerina Performance Tests
  JMeterClientInstanceType:
    Description: JMeter Client EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m4.large
      - m4.xlarge
      - c3.large
      - c3.xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  JMeterServer1InstanceType:
    Description: JMeter Server 1 EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m4.large
      - m4.xlarge
      - c3.large
      - c3.xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  JMeterServer2InstanceType:
    Description: JMeter Server 2 EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m4.large
      - m4.xlarge
      - c3.large
      - c3.xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  BallerinaInstanceType:
    Description: Ballerina EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m4.large
      - m4.xlarge
      - c3.large
      - c3.xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  BackendInstanceType:
    Description: Backend EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m4.large
      - m4.xlarge
      - c3.large
      - c3.xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
    ConstraintDescription: must be a valid EC2 instance type.
################################
# Create AWS resources
################################
Resources:
  ##############################
  # Create VPC and subnet
  ##############################
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: false
      Tags:
        - Key: Name
          Value: !Join
            - ':'
            - - 'VPC'
              - !Ref TestName
  Subnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/24
      Tags:
        - Key: Name
          Value: !Join
            - ':'
            - - 'Subnet'
              - !Ref TestName
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Join
            - ':'
            - - 'InternetGateway'
              - !Ref TestName
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Join
            - ':'
            - - 'RouteTable'
              - !Ref TestName
  Route:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  SubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref Subnet
      RouteTableId: !Ref RouteTable
  JMeterClientIPAddress:
    Type: 'AWS::EC2::EIP'
    DependsOn: AttachGateway
    Properties:
      Domain: vpc
      InstanceId: !Ref JMeterClientInstance
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Security Group for EC2 instances
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '0'
          ToPort: '65535'
          CidrIp: 0.0.0.0/0
  #######################
  # EC2 Instances
  #######################
  JMeterClientInstance:
    Type: 'AWS::EC2::Instance'
    DependsOn: [AttachGateway]
    Properties:
      ImageId: !FindInMap [ AWSRegion2AMI, !Ref "AWS::Region", AMI ]
      InstanceType: !Ref JMeterClientInstanceType
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: !Join
            - ':'
            - - 'JMeter Client'
              - !Ref TestName
      NetworkInterfaces:
        - GroupSet:
            - !Ref InstanceSecurityGroup
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !Ref Subnet
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt-get -y install python-setuptools
          mkdir aws-cfn-bootstrap-latest
          curl https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz | tar xz -C aws-cfn-bootstrap-latest --strip-components 1
          sudo easy_install aws-cfn-bootstrap-latest
          cd /home/ubuntu
          apt-get update
          apt-get install -y openjdk-8-jdk
          mkdir test66
          wget https://s3.us-east-2.amazonaws.com/ballerinaperformancetest/performance-ballerina/performance-ballerina-distribution-0.1.0-SNAPSHOT.tar.gz
          wget https://s3.us-east-2.amazonaws.com/ballerinaperformancetest/performance-common/performance-common-distribution-0.1.1-SNAPSHOT.tar.gz
          tar xzf performance-ballerina-distribution-0.1.0-SNAPSHOT.tar.gz
          tar xzf performance-common-distribution-0.1.1-SNAPSHOT.tar.gz
          cd jmeter
          sudo wget --no-check-certificate --no-proxy 'http://www-us.apache.org/dist//jmeter/binaries/apache-jmeter-4.0.tgz'
          ./install-jmeter.sh apache-jmeter-4.0.tgz /tmp bzm-http2 websocket-samplers
          cd /home/ubuntu
          sudo wget --no-check-certificate --no-proxy 'http://search.maven.org/remotecontent?filepath=org/mortbay/jetty/alpn/alpn-boot/8.1.12.v20180117/alpn-boot-8.1.12.v20180117.jar'
          cd /tmp/apache-jmeter-4.0/bin
          sudo /usr/local/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource JMeterClientInstance --region ${AWS::Region}
    CreationPolicy:
      ResourceSignal:
        Count: '1'
        Timeout: PT7M
  JMeterServer1Instance:
    Type: 'AWS::EC2::Instance'
    DependsOn: [AttachGateway]
    Properties:
      ImageId: !FindInMap [ AWSRegion2AMI, !Ref "AWS::Region", AMI ]
      InstanceType: !Ref JMeterServer1InstanceType
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: !Join
              - ':'
              - - 'JMeter Server 1'
                - !Ref TestName
      NetworkInterfaces:
        - GroupSet:
            - !Ref InstanceSecurityGroup
          AssociatePublicIpAddress: 'false'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !Ref Subnet
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt-get -y install python-setuptools
          mkdir aws-cfn-bootstrap-latest
          curl https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz | tar xz -C aws-cfn-bootstrap-latest --strip-components 1
          sudo easy_install aws-cfn-bootstrap-latest
          cd /home/ubuntu
          apt-get update
          apt-get install -y openjdk-8-jdk
          mkdir test66

         #sudo /usr/local/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource JMeterServer1Instance --region ${AWS::Region}
    #CreationPolicy:
      #ResourceSignal:
        #Count: '1'
        #Timeout: PT7M
Outputs:
  URL:
    Description: JMeter Client Public IP
    Value: !Join
    - ''
    - -  http://
      -  !GetAtt JMeterClientInstance.PublicIp
